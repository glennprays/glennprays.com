name: Deploy Next.js site to Pages

on:
  push:
    branches: ["develop"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v3
        with:
          static_site_generator: next

      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-

      - name: Install Nix
        uses: cachix/install-nix-action@v22
        with:
            nix_path: nixpkgs=channel:nixos-unstable

      - name: Install dependencies, build, and export
        run: |
            # --- TMPDIR fix (keep this) ---
            export TMPDIR=$GITHUB_WORKSPACE/runner-tmp
            mkdir -p "$TMPDIR"
            echo "Set TMPDIR to: $TMPDIR"

            # Start Nix shell with dependencies
            nix shell \
            nixpkgs#nodejs_23 \
            nixpkgs#chromium \
            nixpkgs#alsa-lib \
            nixpkgs#cups \
            nixpkgs#libGL \
            nixpkgs#nss \
            nixpkgs#fontconfig-minimal \
            nixpkgs#dbus \
            nixpkgs#at-spi2-atk \
            nixpkgs#gtk3 \
            nixpkgs#xdg-utils \
            --extra-experimental-features "nix-command flakes" \
            --impure \
            --command bash -c '
                echo "Running inside nix shell..."
                echo "Node version: $(node -v)"
                echo "NPM version: $(npm -v)"

                # Set Puppeteer to use system Chromium
                export PUPPETEER_SKIP_DOWNLOAD=true
                export PUPPETEER_EXECUTABLE_PATH=$(command -v chromium)
                export CHROMIUM_EXECUTABLE_PATH=$PUPPETEER_EXECUTABLE_PATH
                echo "Using Chromium at: $PUPPETEER_EXECUTABLE_PATH"

                # Add required fontconfig configuration (might be needed)
                export FONTCONFIG_PATH=/etc/fonts
                export FONTCONFIG_FILE=/etc/fonts/fonts.conf
                mkdir -p $FONTCONFIG_PATH
                ln -s ${nixpkgs.fontconfig-minimal.out}/etc/fonts/fonts.conf $FONTCONFIG_FILE || true # Ignore if link exists

                # Install and build
                npm ci --loglevel verbose
                npm run build
            '

      - name: List files
        run: ls -alh

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          path: ./out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: self-hosted
    needs: build

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2